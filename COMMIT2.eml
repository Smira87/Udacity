Delivered-To: snoff87@gmail.com
Received: by 2002:a67:f50c:0:0:0:0:0 with SMTP id u12csp174910vsn;
        Mon, 25 Oct 2021 06:57:35 -0700 (PDT)
X-Google-Smtp-Source: ABdhPJy/K8FGzhDweR3hk5DRtp4vG4VYk4iZxtr3yqndwopuLC7NFbRNXykvA0t0IvNGo/MXoc8m
X-Received: by 2002:a05:6808:30a:: with SMTP id i10mr12593891oie.102.1635170255598;
        Mon, 25 Oct 2021 06:57:35 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1635170255; cv=none;
        d=google.com; s=arc-20160816;
        b=iWcGutnoK58UrC5lC7aHkK/ov8O322Tp7hrToj+cMnGJOl/Ik6109yEb6puB0U7UNP
         wH0DNNUxOfBkO4EUyL7oxm0qad0RcJdOZFE+JysfYZ2jf6DBx0vfVaA1cERzbQ/l8U49
         JLjkC89Pt0gGQwnjgI9aWsclRMViA2tq+Fc1ozx3XuM91X4hGVdO3D2vgWBy/AypZwAD
         TOrgXpDz4GAGnbeTO9YMyrxKobGS5PldNoNURRJBRwskL6awPBEEU/0ZfoUcwlLV+7yP
         tVsulgnAby2s5wVUW9gqjZzD8+FUGQ35zYBt4bQwQuWHsdbmaMx8Rbg5RcK/Qn4eQs57
         FuHQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=subject:to:message-id:from:date;
        bh=ysZD6NzgsMm8nnEcutTSUMLJSHiqc2XPsERbqDYc9jA=;
        b=G9M3biaWktTNrJc/6JSZGTGyVwYPB7F8Ku6BkXEVdeuBIrlcOyyuscaqUhHyYdGqqn
         aPffn9O27V1j8v9w7918Cskpf9N9QbZML9MFDRcE+luUhQWk5+JxJE1op0Q7nySGQOUT
         YQjDzg3xH9UYVYcGSU6593BfLVyPo4qgygLSc/bLIHTuOMDUnuRQexNnqvTubA9nykOz
         FwV0Nm+asdyhaNaJnq5FVipipD3fBL38IOADkRPM1fPATFFGX0vobTnm+gxs6H9LmtYp
         B52FlGGAUpTL4Wr8OskY/twb90G8fVdV2QajqyUrLqmRr0vX7hUUnJL24FkMdOIC39Gb
         RYQQ==
ARC-Authentication-Results: i=1; mx.google.com;
       spf=neutral (google.com: 178.62.211.90 is neither permitted nor denied by best guess record for domain of ssp-root@releng13-50.local.com) smtp.mailfrom=ssp-root@releng13-50.local.com;
       dmarc=fail (p=QUARANTINE sp=NONE dis=NONE) header.from=local.com
Return-Path: <ssp-root@releng13-50.local.com>
Received: from releng13-50.local.com ([178.62.211.90])
        by mx.google.com with ESMTPS id c3si19253566otm.71.2021.10.25.06.57.34
        for <snoff87@gmail.com>
        (version=TLS1_2 cipher=ECDHE-ECDSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 25 Oct 2021 06:57:35 -0700 (PDT)
Received-SPF: neutral (google.com: 178.62.211.90 is neither permitted nor denied by best guess record for domain of ssp-root@releng13-50.local.com) client-ip=178.62.211.90;
Authentication-Results: mx.google.com;
       spf=neutral (google.com: 178.62.211.90 is neither permitted nor denied by best guess record for domain of ssp-root@releng13-50.local.com) smtp.mailfrom=ssp-root@releng13-50.local.com;
       dmarc=fail (p=QUARANTINE sp=NONE dis=NONE) header.from=local.com
Received: from releng13-50.local.com (localhost [127.0.0.1])
	by releng13-50.local.com (8.15.2/8.15.2) with ESMTPS id 19PDvUsV093755
	(version=TLSv1.2 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=NO)
	for <snoff87@gmail.com>; Mon, 25 Oct 2021 06:57:30 -0700 (PDT)
	(envelope-from ssp-root@releng13-50.local.com)
Received: (from ssp-root@localhost)
	by releng13-50.local.com (8.15.2/8.15.2/Submit) id 19PDvURl093751
	for snoff87@gmail.com; Mon, 25 Oct 2021 06:57:30 -0700 (PDT)
	(envelope-from ssp-root)
Date: Mon, 25 Oct 2021 06:57:30 -0700 (PDT)
From: User Ssp-root <ssp-root@releng13-50.local.com>
Message-Id: <202110251357.19PDvURl093751@releng13-50.local.com>
To: snoff87@gmail.com
Subject: COMMIT

commit dd63811e983d7d277bb1fd83b1ca5ab0ddbd175e
Author: User Ssp-root <ssp-root@releng13-50.local.com>
Date:   Mon Oct 25 06:53:37 2021 -0700

    Changes according to Geka

diff --git a/Tests/test_main.py b/Tests/test_main.py
deleted file mode 100644
index 07b126a..0000000
--- a/Tests/test_main.py
+++ /dev/null
@@ -1,14 +0,0 @@
-from Src import main
-
-"""Test function to test ALL main.py functions"""
-def test_calculate_hash_value():
-
-    hash_table = main.HashTable()
-
-    hash_table.store('LALA')
-
-    assert hash_table.calculate_hash_value('LALA') == hash_table.lookup('LALA'), "Test failed"
-
-    assert hash_table.calculate_hash_value('LALAFA') == hash_table.calculate_hash_value('LAFAFA')
-
-    assert hash_table.calculate_hash_value('UDACITY') == 8568
\ No newline at end of file
diff --git a/conftest.py b/conftest.py
deleted file mode 100644
index e69de29..0000000
diff --git a/Src/main.py b/src/main.py
similarity index 85%
rename from Src/main.py
rename to src/main.py
index 7679656..a704dd7 100644
--- a/Src/main.py
+++ b/src/main.py
@@ -1,4 +1,5 @@
 class HashTable(object):
+    """Class that generates a Hash Table"""
     def __init__(self):
         self.table = [None]*10000
 
@@ -18,6 +19,7 @@ class HashTable(object):
                 self.table[hv] = [string]
         else:
             print("This string is already present in a table")
+
     def lookup(self, string):
         """Return the hash value if the
         string is already in the table.
@@ -39,7 +41,8 @@ class HashTable(object):
 
             except IndexError:
 
-                print("There must be at least two letters in an input string. Please correct your code")
+                print(
+                    "There must be at least two letters in an input string. Please correct your code")
                 exit()
 
             except TypeError:
@@ -48,8 +51,9 @@ class HashTable(object):
                 exit()
         else:
 
-            print('Input string should be uppercase');
+            print('Input string should be uppercase')
             exit()
         return value
 
+
 hash_table = HashTable()
diff --git a/tests/test_main.py b/tests/test_main.py
new file mode 100644
index 0000000..9a222a9
--- /dev/null
+++ b/tests/test_main.py
@@ -0,0 +1,18 @@
+from src import main
+
+"""Test function to test ALL main.py functions"""
+
+
+def test_calculate_hash_value():
+
+    hash_table = main.HashTable()
+
+    hash_table.store('LALA')
+
+    assert hash_table.calculate_hash_value(
+        'LALA') == hash_table.lookup('LALA'), "Test failed"
+
+    assert hash_table.calculate_hash_value(
+        'LALAFA') == hash_table.calculate_hash_value('LAFAFA')
+
+    assert hash_table.calculate_hash_value('UDACITY') == 8568
